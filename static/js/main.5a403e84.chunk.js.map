{"version":3,"sources":["utils/currencies.js","Background/index.js","Header/index.js","Calculator/index.js","Form/index.js","ResultField/index.js","Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["currencies","id","name","rateToPLN","rateFromPLN","Background","props","className","children","Header","title","paragraph","Calculator","body","resultField","Form","useState","amount","setAmount","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","onSubmit","event","preventDefault","calcResult","onReset","resetResult","value","onChange","target","type","min","max","step","required","map","currency","ResultField","result","toFixed","Footer","App","setResult","find","outcome","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a403e84.chunk.js","sourcesContent":["const currencies = [\r\n    {\r\n        id: 1,\r\n        name: \"PLN\",\r\n        rateToPLN: 1,\r\n        rateFromPLN: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"EUR\",\r\n        rateToPLN: 4.4607,\r\n        rateFromPLN: 4.5963\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"USD\",\r\n        rateToPLN: 3.8902,\r\n        rateFromPLN: 3.9241\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"GBP\",\r\n        rateToPLN: 5.3813,\r\n        rateFromPLN: 5.4297\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"CHF\",\r\n        rateToPLN: 4.2153,\r\n        rateFromPLN: 4.2502\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"RUB\",\r\n        rateToPLN: 0.0489,\r\n        rateFromPLN: 0.0569\r\n    }\r\n];\r\n\r\nexport { currencies };\r\n\r\n// currency purchase and selling rates from cinkciarz.pl, 10.08.2021, 21:50","import \"./style.css\";\r\n\r\nconst Background = (props) => (\r\n    <div className=\"background\">\r\n        <div className=\"container\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Background;","import \"./style.css\";\r\n\r\nconst Header = (props) => (\r\n    <section className=\"header\">\r\n        <h1 className=\"header__title\">{props.title}</h1>\r\n        <p className=\"header__paragraph\">{props.paragraph}</p>\r\n    </section>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Calculator = (props) => (\r\n    <div className=\"calculator\">\r\n        {props.body} {props.resultField}\r\n    </div>\r\n);\r\n\r\nexport default Calculator;","import \"./style.css\";\r\nimport { useState } from \"react\";\r\nimport { currencies } from \"../utils/currencies\";\r\n\r\nconst Form = (props) => {\r\n\r\n    const [amount, setAmount] = useState(\"100\");\r\n    const [currencyFrom, setCurrencyFrom] = useState(currencies[0].name);\r\n    const [currencyTo, setCurrencyTo] = useState(currencies[1].name);\r\n\r\n    const onEnterAmount = (event) => setAmount(event.target.value);\r\n    const onSelectCurrencyFromChange = (event) => setCurrencyFrom(event.target.value);\r\n    const onSelectCurrencyToChange = (event) => setCurrencyTo(event.target.value);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.calcResult(amount, currencyFrom, currencyTo);\r\n    };\r\n\r\n    const onFormReset = (event) => {\r\n        event.preventDefault();\r\n\r\n        setAmount(100);\r\n        setCurrencyFrom(currencies[0].name);\r\n        setCurrencyTo(currencies[1].name);\r\n        props.resetResult();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit} onReset={onFormReset} className=\"calculator__form\" >\r\n            <fieldset className=\"calculator__formFieldset\">\r\n                <legend className=\"calculator__formLegend\">{props.title}</legend>\r\n                <p className=\"calculator__formParagraph\">\r\n                    <label className=\"calculator__formLabel\">Chcę wymienić\r\n                        <input\r\n                            value={amount}\r\n                            onChange={onEnterAmount}\r\n                            className=\"calculator__formField calculator__formField\"\r\n                            type=\"number\" min=\"10\" max=\"100000\" step=\"1\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <label className=\"calculator__formLabel\">\r\n                        <select\r\n                            value={currencyFrom}\r\n                            onChange={onSelectCurrencyFromChange}\r\n                            className=\"calculator__formField\"\r\n                            name=\"currencyFrom\"\r\n                        >\r\n                            {props.currencies.map(currency => (\r\n                                <option key={currency.id} value={currency.name}>\r\n                                    {currency.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                    <label className=\"calculator__formLabel\">na\r\n                        <select\r\n                            value={currencyTo}\r\n                            onChange={onSelectCurrencyToChange}\r\n                            className=\"calculator__formField\"\r\n                            name=\"currencyTo\"\r\n                        >\r\n                            {props.currencies.map(currency => (\r\n                                <option key={currency.id} value={currency.name}>\r\n                                    {currency.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n                <p className=\"calculator__formParagraph\">\r\n                    <button className=\"button button--submit\" type=\"submit\">Oblicz</button>\r\n                    <button className=\"button button--reset\" type=\"reset\">Wyczyść</button>\r\n                </p>\r\n            </fieldset>\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst ResultField = (props) => (\r\n    <div className=\"calculator__resultField\">\r\n        {!!props.result && (\r\n            <>\r\n                {props.result.amount.toFixed(2)}&nbsp;{props.result.currencyFrom}\r\n                {\" \"}\r\n                =\r\n                {\" \"}\r\n                <strong>\r\n                    {props.result.result.toFixed(2)}&nbsp;{props.result.currencyTo}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default ResultField;","import \"./style.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">Powered by mal_vka</footer>\r\n);\r\n\r\nexport default Footer;","import { useState } from \"react\";\nimport { currencies } from \"./utils/currencies\";\nimport Background from \"./Background\";\nimport Header from \"./Header\";\nimport Calculator from \"./Calculator\";\nimport Form from \"./Form\";\nimport ResultField from \"./ResultField\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n\n  const [result, setResult] = useState();\n\n  const calcResult = (amount, currencyFrom, currencyTo) => {\n\n    const outcome = (amount, currencyFrom, currencyTo) => {\n\n      const rateFromPLN = currencies.find(({ name }) => name === currencyTo).rateFromPLN;\n      const rateToPLN = currencies.find(({ name }) => name === currencyFrom).rateToPLN;\n\n      if (currencyFrom === currencyTo) {\n        return amount;\n      } else if (currencyFrom === \"PLN\") {\n        return amount / rateFromPLN;\n      } else if (currencyTo === \"PLN\") {\n        return amount * rateToPLN;\n      } else {\n        return (amount / rateFromPLN) * rateToPLN;\n      };\n    };\n\n    setResult({\n      amount: +amount,\n      currencyFrom,\n      result: outcome(amount, currencyFrom, currencyTo),\n      currencyTo\n    });\n  };\n\n  const resetResult = () => {\n    setResult(\"\");\n  };\n\n  return (\n    <Background>\n\n      <Header\n        title=\"Twój kantor\"\n        paragraph=\"najlepsze kursy walut w internecie\"\n      />\n\n      <Calculator\n        body={\n          <Form\n            title=\"Kalkulator walut\"\n            currencies={currencies}\n            calcResult={calcResult}\n            resetResult={resetResult}\n          />\n        }\n        resultField={<ResultField result={result} />}\n      />\n\n      <Footer />\n\n    </Background>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}